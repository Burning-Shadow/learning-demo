/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./index.js":
/*!******************!*\
  !*** ./index.js ***!
  \******************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _style_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./style.css */ \"./style.css\");\n/* harmony import */ var _style_css__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_style_css__WEBPACK_IMPORTED_MODULE_0__);\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n // require('style.css');\n\n/**\r\n * @class Board 9x9数独矩阵\r\n */\n\nvar Board =\n/*#__PURE__*/\nfunction () {\n  //构造函数生成空白的9x9数独格子\n  function Board() {\n    _classCallCheck(this, Board);\n\n    var cells = [];\n\n    for (var i = 0; i < 9; i++) {\n      for (var j = 0; j < 9; j++) {\n        cells[i * 9 + j] = new Cell(i + 1, j + 1, 0);\n      }\n    }\n\n    ;\n    this.cells = cells;\n    this.focusLocation = [0, 0];\n    this.dom = null;\n  } //初始化数独矩阵，生成完整的符合数独规则的表格\n\n\n  _createClass(Board, [{\n    key: \"init\",\n    value: function init() {\n      var row = 1;\n\n      while (row <= 9) {\n        row = Tools.fillRow(this, row);\n      }\n\n      ;\n    } //获取当前数独的81个格子列表\n\n  }, {\n    key: \"getCells\",\n    value: function getCells() {\n      return this.cells;\n    }\n    /**\r\n     * 获取指定矩形范围的格子列表\r\n     * @param {number} startRow 开始行数-含\r\n     * @param {number} startCol 开始列数-含\r\n     * @param {number} endRow 结束行数-含\r\n     * @param {number} endCol 结束列数-含\r\n     * @param {boolean} onlyValue 返回格子的值，默认false返回格子对象\r\n     * @returns {array} 指定范围的格子/格子值列表\r\n     */\n\n  }, {\n    key: \"getRangeList\",\n    value: function getRangeList(startRow, startCol, endRow, endCol) {\n      var onlyValue = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n      var rangeList = this.cells.filter(function (item) {\n        var _item$getLocation = item.getLocation(),\n            _item$getLocation2 = _slicedToArray(_item$getLocation, 2),\n            cellRow = _item$getLocation2[0],\n            cellCol = _item$getLocation2[1];\n\n        var isContainRow = cellRow >= startRow && cellRow <= endRow,\n            isContainCol = cellCol >= startCol && cellCol <= endCol;\n        return isContainRow && isContainCol;\n      });\n      return onlyValue ? Tools.getValueList(rangeList) : rangeList;\n    } //获取指定坐标的格子对象\n\n  }, {\n    key: \"getSingleCell\",\n    value: function getSingleCell(row, col) {\n      return this.getRangeList(row, col, row, col)[0];\n    } //获取指定行的9个格子列表\n\n  }, {\n    key: \"getRowList\",\n    value: function getRowList(row) {\n      return this.getRangeList(row, 1, row, 9);\n    } //获取指定列的9个格子列表\n\n  }, {\n    key: \"getColList\",\n    value: function getColList(col) {\n      return this.getRangeList(1, col, 9, col);\n    } //获取指定坐标的格子所在3x3区块的9个格子列表\n\n  }, {\n    key: \"getSqureList\",\n    value: function getSqureList(row, col) {\n      var bigRow = parseInt((row - 1) / 3) + 1,\n          rowTop = bigRow * 3,\n          rowBottom = rowTop - 2,\n          bigCol = parseInt((col - 1) / 3) + 1,\n          colTop = bigCol * 3,\n          colBottom = colTop - 2;\n      return this.getRangeList(rowBottom, colBottom, rowTop, colTop);\n    }\n    /**\r\n     * 批量设置指定矩形范围格子的值\r\n     * @param {number} startRow 开始行数-含\r\n     * @param {number} startCol 开始列数-含\r\n     * @param {number} endRow 结束行数-含\r\n     * @param {number} endCol 结束列数-含\r\n     * @param {number} value 格子的值，默认0\r\n     * @returns {array} 指定范围的格子列表\r\n     */\n\n  }, {\n    key: \"setRangeList\",\n    value: function setRangeList(startRow, startCol, endRow, endCol) {\n      var value = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0;\n      var list = this.getRangeList(startRow, startCol, endRow, endCol, false);\n      list.forEach(function (item) {\n        item.setValue(value);\n      });\n      return list;\n    }\n    /**\r\n     * 设置指定坐标格子的值\r\n     * @param {number} row 行坐标\r\n     * @param {number} col 列坐标\r\n     * @param {number} val 要设置的值\r\n     * @returns {object} 返回指定的格子对象\r\n     */\n\n  }, {\n    key: \"setSingleCell\",\n    value: function setSingleCell(row, col, val) {\n      return this.setRangeList(row, col, row, col, val)[0];\n    }\n    /**\r\n     * 清楚指定矩形范围格子的值和数字使用记录\r\n     * @param {number} startRow 开始行数-含\r\n     * @param {number} startCol 开始列数-含\r\n     * @param {number} endRow 结束行数-含\r\n     * @param {number} endCol 结束列数-含\r\n     */\n\n  }, {\n    key: \"clearRangeList\",\n    value: function clearRangeList(startRow, startCol, endRow, endCol) {\n      var list = this.setRangeList(startRow, startCol, endRow, endCol, 0);\n      list.forEach(function (cell) {\n        cell.used.clearUsed();\n      });\n    }\n  }, {\n    key: \"digSingleCell\",\n    value: function digSingleCell(row, col) {\n      var cell = this.getSingleCell(row, col);\n      cell.setDigStatus(true);\n      return cell;\n    }\n  }, {\n    key: \"handleInputFocus\",\n    value: function handleInputFocus(row, col) {\n      var cell = this.getSingleCell(row, col);\n\n      if (cell.getDigStatus()) {\n        cell.toggleFocus();\n        this.setFocusLocation(row, col);\n        this.updateCellDom(row, col);\n      }\n    }\n  }, {\n    key: \"setFocusLocation\",\n    value: function setFocusLocation(row, col) {\n      var _this$focusLocation = _slicedToArray(this.focusLocation, 2),\n          lastRow = _this$focusLocation[0],\n          lastCol = _this$focusLocation[1];\n\n      var lastCell = this.getSingleCell(lastRow, lastCol);\n\n      if (lastCell) {\n        lastCell.toggleFocus();\n        this.setReleAreaFocus(lastRow, lastCol, false);\n        this.updateCellDom(lastRow, lastCol);\n      }\n\n      ;\n      this.focusLocation = [row, col];\n      this.setReleAreaFocus(row, col, true);\n    }\n  }, {\n    key: \"setReleAreaFocus\",\n    value: function setReleAreaFocus(row, col) {\n      var _this = this;\n\n      var isFocus = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      var associatArea = this.getReleArea(row, col);\n      associatArea.forEach(function (cell) {\n        var _cell$getLocation = cell.getLocation(),\n            _cell$getLocation2 = _slicedToArray(_cell$getLocation, 2),\n            cellRow = _cell$getLocation2[0],\n            cellCol = _cell$getLocation2[1];\n\n        cell.setReleFocus(isFocus);\n\n        _this.updateCellDom(cellRow, cellCol);\n      });\n    }\n  }, {\n    key: \"getReleArea\",\n    value: function getReleArea(row, col) {\n      var rowList = this.getRowList(row),\n          colList = this.getColList(col),\n          squreList = this.getSqureList(row, col);\n      var combineList = [].concat(rowList, colList, squreList);\n      return combineList.reduce(function (pre, cur) {\n        if (!pre.includes(cur)) pre.push(cur);\n        return pre;\n      }, []);\n    }\n  }, {\n    key: \"handleUserInput\",\n    value: function handleUserInput(val) {\n      val = Number(val);\n\n      var _this$focusLocation2 = _slicedToArray(this.focusLocation, 2),\n          row = _this$focusLocation2[0],\n          col = _this$focusLocation2[1];\n\n      var cell = this.getSingleCell(row, col);\n      if (!cell) return;\n      var isValid = this.checkInputValid(row, col, val);\n      cell.setUserInput(val);\n\n      if (isValid) {\n        console.log(\"(\".concat(row, \", \").concat(col, \") = \").concat(val, \" valid\"));\n\n        if (this.checkAllDone()) {\n          this.updateCellDom(row, col);\n          alert('恭喜过关');\n        } else {// this.handleInputFocus(...this.getNextDigCell(row, col));//移到下一格\n        }\n      } else {\n        console.log(\"(\".concat(row, \", \").concat(col, \") = \").concat(val, \" invalid\"));\n      }\n\n      this.updateCellDom(row, col);\n    }\n  }, {\n    key: \"checkInputValid\",\n    value: function checkInputValid(row, col, val) {\n      var _this2 = this;\n\n      var editingCell = this.getSingleCell(row, col),\n          releAreaCells = this.getReleArea(row, col),\n          isValid = true;\n      releAreaCells.forEach(function (cell) {\n        var _cell$getLocation3 = cell.getLocation(),\n            _cell$getLocation4 = _slicedToArray(_cell$getLocation3, 2),\n            cellRow = _cell$getLocation4[0],\n            cellCol = _cell$getLocation4[1];\n\n        if (row === cellRow && col === cellCol) return;\n        var cellValue = cell.getDigStatus() ? cell.getUserInput() : cell.getValue();\n        var cellInvalid = false;\n\n        if (val !== 0 && cellValue === val) {\n          isValid = false;\n          cellInvalid = true;\n        } else {\n          cellInvalid = false;\n        }\n\n        editingCell.setReleInputInvalid(cellRow, cellCol, cellInvalid);\n        cell.setReleInputInvalid(row, col, cellInvalid);\n\n        _this2.updateCellDom(cellRow, cellCol);\n      });\n      return isValid;\n    }\n  }, {\n    key: \"checkAllDone\",\n    value: function checkAllDone() {\n      var cells = this.getCells();\n\n      for (var i = 0; i < cells.length; i++) {\n        var cell = cells[i];\n\n        if (cell.getDigStatus()) {\n          if (cell.getUserInput() === 0) return false; // if (!cell.getInputValidStatus()) return false;\n\n          if (cell.getReleInputInvalid().length > 0) return false;\n        }\n      }\n\n      ;\n      return true;\n    }\n  }, {\n    key: \"getNextDigCell\",\n    value: function getNextDigCell(row, col) {\n      var cells = this.getCells(),\n          cell = this.getSingleCell(row, col),\n          curIndex = cell.getListIndex();\n\n      for (var i = curIndex + 1; i < cells.length; i++) {\n        var item = cells[i];\n\n        if (item.getDigStatus()) {\n          return item.getLocation();\n        }\n      }\n\n      ;\n      return false;\n    }\n  }, {\n    key: \"updateCellDom\",\n    value: function updateCellDom(row, col) {\n      var index = (row - 1) * 9 + col - 1,\n          cellList = this.dom.children[0],\n          oldCellNode = cellList.children[index],\n          cell = this.getSingleCell(row, col),\n          newCellNode = Tools.renderSingleCell(cell);\n      cellList.replaceChild(newCellNode, oldCellNode);\n    }\n    /**\r\n     * 渲染数独表格\r\n     * @param {object} dom 装载数独表格的容器\r\n     */\n\n  }, {\n    key: \"renderBoard\",\n    value: function renderBoard(dom) {\n      var cells = this.cells;\n      var listHtml = document.createElement('ul');\n      listHtml.className = 'sudoku-list';\n      cells.forEach(function (cell) {\n        var cellNode = Tools.renderSingleCell(cell);\n        listHtml.appendChild(cellNode);\n      });\n      dom.innerHTML = '';\n      dom.appendChild(listHtml);\n      this.dom = dom;\n    }\n  }]);\n\n  return Board;\n}();\n/**\r\n * @class Cell 数独的单个元素/格子\r\n */\n\n\nvar Cell =\n/*#__PURE__*/\nfunction () {\n  /**\r\n   * 格子构造函数\r\n   * @param {number} row 行坐标\r\n   * @param {number} col 列坐标\r\n   * @param {number} val 数值\r\n   */\n  function Cell(row, col, val) {\n    _classCallCheck(this, Cell);\n\n    this.row = row;\n    this.col = col;\n    this.value = val;\n    this.used = new NumberUsed();\n    this.userInput = 0;\n    this.isDigged = false;\n    this.focus = false;\n    this.index = (row - 1) * 9 + col - 1;\n    this.releFocus = false;\n    this.releInputInvalid = new ReleInputInvalidRecord();\n  } //获取当前格子的坐标\n\n\n  _createClass(Cell, [{\n    key: \"getLocation\",\n    value: function getLocation() {\n      return [this.row, this.col];\n    } //获取当前格子的数值\n\n  }, {\n    key: \"getValue\",\n    value: function getValue() {\n      return this.value;\n    } //设置当前格子的数值\n\n  }, {\n    key: \"setValue\",\n    value: function setValue(val) {\n      this.value = val;\n      this.used.addUsed(val);\n    }\n  }, {\n    key: \"getUserInput\",\n    value: function getUserInput() {\n      return this.userInput;\n    }\n  }, {\n    key: \"setUserInput\",\n    value: function setUserInput(val) {\n      this.userInput = val;\n    }\n  }, {\n    key: \"getDigStatus\",\n    value: function getDigStatus() {\n      return this.isDigged;\n    }\n  }, {\n    key: \"setDigStatus\",\n    value: function setDigStatus(bool) {\n      this.isDigged = bool;\n    }\n  }, {\n    key: \"toggleFocus\",\n    value: function toggleFocus() {\n      this.focus = !this.focus;\n    }\n  }, {\n    key: \"getFocus\",\n    value: function getFocus() {\n      return this.focus;\n    }\n  }, {\n    key: \"getListIndex\",\n    value: function getListIndex() {\n      return this.index;\n    }\n  }, {\n    key: \"getReleFocus\",\n    value: function getReleFocus() {\n      return this.releFocus;\n    }\n  }, {\n    key: \"setReleFocus\",\n    value: function setReleFocus(bool) {\n      this.releFocus = bool;\n      return this;\n    }\n  }, {\n    key: \"getReleInputInvalid\",\n    value: function getReleInputInvalid() {\n      return this.releInputInvalid.getArray();\n    }\n  }, {\n    key: \"setReleInputInvalid\",\n    value: function setReleInputInvalid(row, col, isAdd) {\n      return this.releInputInvalid.handleRecord(row, col, isAdd);\n    }\n  }]);\n\n  return Cell;\n}();\n\nvar ReleInputInvalidRecord =\n/*#__PURE__*/\nfunction () {\n  function ReleInputInvalidRecord() {\n    _classCallCheck(this, ReleInputInvalidRecord);\n\n    this.record = new Set();\n  }\n\n  _createClass(ReleInputInvalidRecord, [{\n    key: \"handleRecord\",\n    value: function handleRecord(row, col, isAdd) {\n      var record = this.record,\n          str = \"\".concat(row, \"-\").concat(col);\n\n      if (isAdd) {\n        record.add(str);\n      } else {\n        record.delete(str);\n      }\n\n      ;\n    }\n  }, {\n    key: \"getArray\",\n    value: function getArray() {\n      return _toConsumableArray(this.record);\n    }\n  }]);\n\n  return ReleInputInvalidRecord;\n}();\n/**\r\n * @class NumberUsed 记录格子使用过的数字\r\n */\n\n\nvar NumberUsed =\n/*#__PURE__*/\nfunction () {\n  function NumberUsed() {\n    _classCallCheck(this, NumberUsed);\n\n    this.used = [];\n  } //获取当前格子使用过的数字列表\n\n\n  _createClass(NumberUsed, [{\n    key: \"getUsedList\",\n    value: function getUsedList() {\n      return this.used;\n    }\n    /**\r\n     * 添加一个使用过的数字\r\n     * @param {number} num 使用的数字\r\n     * @returns {array} 使用过的数字列表\r\n     */\n\n  }, {\n    key: \"addUsed\",\n    value: function addUsed(num) {\n      this.used.push(num);\n      return this.used;\n    } //删除上一个使用过的数字\n\n  }, {\n    key: \"removeLastUsed\",\n    value: function removeLastUsed() {\n      this.used.pop();\n      return this.used;\n    } //清除使用记录\n\n  }, {\n    key: \"clearUsed\",\n    value: function clearUsed() {\n      this.used.length = 0;\n    }\n  }]);\n\n  return NumberUsed;\n}();\n/**\r\n * @class Tools 工具方法的集合\r\n */\n// Tools.basicList = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n\n\nvar Tools =\n/*#__PURE__*/\nfunction () {\n  function Tools() {\n    _classCallCheck(this, Tools);\n  }\n\n  _createClass(Tools, null, [{\n    key: \"getBasicList\",\n    //基础数组\n    //获取基础数组的副本\n    value: function getBasicList() {\n      return _toConsumableArray(this.basicList);\n    }\n    /**\r\n     * 获取一个随机数，默认返回1~9的随机数\r\n     * @param {number} top 随机数最大值，默认9\r\n     * @param {number} fromZero 是否从零开始，默认false从1开始，设为true可返回随机索引值\r\n     * @returns {number} 生成的随机数\r\n     */\n\n  }, {\n    key: \"getRandomNum\",\n    value: function getRandomNum() {\n      var top = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 9;\n      var fromZero = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      return parseInt(Math.random() * (top - 0.1)) + (fromZero ? 0 : 1);\n    }\n    /**\r\n     * 生成包含1~9随机顺序的数组\r\n     * @returns {array}\r\n     */\n\n  }, {\n    key: \"getRandomOrderValues\",\n    value: function getRandomOrderValues() {\n      var basicList = this.getBasicList();\n      var newList = [];\n\n      while (basicList.length > 0) {\n        var randomIdnex = this.getRandomNum(basicList.length, true);\n        var randomItem = basicList.splice(randomIdnex, 1)[0];\n        newList.push(randomItem);\n      }\n\n      ;\n      return newList;\n    }\n    /**\r\n     * 提取一组格子的值\r\n     * @param {array} cellList 格子数组\r\n     * @param {boolean} isInput 是不是用户输入，如果是，优先返回输入数据\r\n     * @returns {array}\r\n     */\n\n  }, {\n    key: \"getValueList\",\n    value: function getValueList(cellList) {\n      var isInput = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var row = arguments.length > 2 ? arguments[2] : undefined;\n      var col = arguments.length > 3 ? arguments[3] : undefined;\n      return cellList.map(function (cell) {\n        if (isInput) {\n          var _cell$getLocation5 = cell.getLocation(),\n              _cell$getLocation6 = _slicedToArray(_cell$getLocation5, 2),\n              cellRow = _cell$getLocation6[0],\n              cellCol = _cell$getLocation6[1];\n\n          if (row === cellRow && col === cellCol) return 0;\n          return cell.getDigStatus() ? cell.getUserInput() : cell.getValue();\n        } else {\n          return cell.getValue();\n        }\n      });\n    }\n    /**\r\n     * 根据数独规则，计算指定坐标格子的可用数字\r\n     * @param {number} row 行坐标\r\n     * @param {number} col 列坐标\r\n     * @param {object} table 所在数独表格对象\r\n     * @param {boolean} isInput 是不是用户输入的情况\r\n     * @returns {array} 可用数字列表\r\n     */\n\n  }, {\n    key: \"getValidNums\",\n    value: function getValidNums(row, col, table) {\n      var isInput = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n      var rowList = table.getRowList(row),\n          colList = table.getColList(col),\n          squreList = table.getSqureList(row, col);\n      var rowListVal = this.getValueList(rowList, isInput, row, col),\n          colListVal = this.getValueList(colList, isInput, row, col),\n          squreListVal = this.getValueList(squreList, isInput, row, col);\n      var basicList = this.getBasicList();\n      var cellUsed = isInput ? [] : table.getSingleCell(row, col).used.getUsedList();\n      return basicList.filter(function (item) {\n        return !rowListVal.includes(item) && !colListVal.includes(item) && !squreListVal.includes(item) && !cellUsed.includes(item);\n      });\n    }\n    /**\r\n     * 填充指定行数字\r\n     * @param {object} table 所在数独表格对象\r\n     * @param {number} row 行坐标\r\n     * @returns {number} 下一个操作的行坐标，【上一行】 或 【下一行】\r\n     */\n\n  }, {\n    key: \"fillRow\",\n    value: function fillRow(table, row) {\n      table.clearRangeList(row, 1, row, 9); //清空当前行\n\n      var col = 1;\n\n      while (col <= 9) {\n        var validNums = this.getValidNums(row, col, table, false),\n            len = validNums.length;\n\n        if (len > 0) {\n          var randomIndex = this.getRandomNum(len - 1, true);\n          table.setSingleCell(row, col, validNums[randomIndex]);\n          col++;\n        } else {\n          if (col === 1) {\n            //如果是本行第一个格子，返回操作【上一行】\n            table.clearRangeList(row, 1, row, 9); //清空当前行\n\n            return row - 1;\n          } else {\n            //返回上一个格子\n            table.clearRangeList(row, col, row, col); //清空当前格子\n\n            col--;\n          }\n        }\n      }\n\n      ; //本行填充完成，操作【下一行】\n\n      return row + 1;\n    }\n  }, {\n    key: \"renderSingleCell\",\n    value: function renderSingleCell(cell) {\n      var cellNode = document.createElement('li');\n\n      var value = cell.getValue(),\n          _cell$getLocation7 = cell.getLocation(),\n          _cell$getLocation8 = _slicedToArray(_cell$getLocation7, 2),\n          row = _cell$getLocation8[0],\n          col = _cell$getLocation8[1];\n\n      cellNode.classList.add('base-cell');\n      if (row === 3 || row === 6) cellNode.classList.add('bold-bottom');\n      if (row === 4 || row === 7) cellNode.classList.add('bold-top');\n      if (col === 3 || col === 6) cellNode.classList.add('bold-right');\n      if (col === 4 || col === 7) cellNode.classList.add('bold-left');\n      if (value === 0) cellNode.classList.add('zero-cell');\n      if (cell.getFocus()) cellNode.classList.add('focus');\n      if (cell.getReleFocus()) cellNode.classList.add('rele-focus');\n      if (cell.getReleInputInvalid().length > 0) cellNode.classList.add('rele-invalid');\n\n      if (cell.getDigStatus()) {\n        var userInput = cell.getUserInput();\n        value = userInput || '';\n        cellNode.classList.add('digged-cell');\n      }\n\n      ;\n      cellNode.innerText = value;\n      cellNode.setAttribute('data-location', \"\".concat(row, \"-\").concat(col));\n      cellNode.setAttribute('data-type', 'cell');\n      return cellNode;\n    }\n  }]);\n\n  return Tools;\n}();\n\n_defineProperty(Tools, \"basicList\", [1, 2, 3, 4, 5, 6, 7, 8, 9]);\n\nvar Sodoku =\n/*#__PURE__*/\nfunction () {\n  function Sodoku(dom) {\n    _classCallCheck(this, Sodoku);\n\n    this.dom = dom;\n    this.init(dom);\n    this.startTime = null;\n    this.endTime = null;\n  }\n\n  _createClass(Sodoku, [{\n    key: \"init\",\n    value: function init(dom) {\n      var table = new Board();\n      var panel = new NumberPanel();\n      var userInerface = new UserInerfacePanel(this);\n      var tableContainer = document.createElement('div'),\n          numberPanelContainer = document.createElement('div'),\n          userInerfaceContainer = document.createElement('div');\n      table.init();\n      table.renderBoard(tableContainer);\n      panel.init(numberPanelContainer);\n      userInerface.init(userInerfaceContainer);\n      dom.appendChild(tableContainer);\n      dom.appendChild(numberPanelContainer);\n      dom.appendChild(userInerfaceContainer);\n      this.tableContainer = tableContainer;\n      this.table = table;\n      this.panel = panel;\n    }\n    /**\r\n     * 对完整的数独进行挖空\r\n     * @param {number} level 难度等级 ---------- 暂时没用，未掌握数独定级算法\r\n     *      1-简单 -每行保留4格\r\n     *      2-普通 -每行保留3格\r\n     *      3-困难 -每行保留2格\r\n     */\n\n  }, {\n    key: \"digBoard\",\n    value: function digBoard() {\n      var level = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n      var keepCount = 5 - level;\n      var table = this.table;\n\n      for (var row = 1; row <= 9; row++) {\n        var keepColList = [];\n\n        for (var j = 0; j < keepCount; j++) {\n          var randomCol = Tools.getRandomNum(9, false);\n\n          while (keepColList.includes(randomCol)) {\n            randomCol = Tools.getRandomNum(9, false);\n          }\n\n          ;\n          keepColList.push(randomCol);\n        }\n\n        ;\n\n        for (var col = 1; col <= 9; col++) {\n          if (!keepColList.includes(col)) {\n            table.digSingleCell(row, col);\n          }\n        }\n      }\n    }\n  }, {\n    key: \"updateDom\",\n    value: function updateDom() {\n      this.table.renderBoard(this.tableContainer);\n    }\n  }, {\n    key: \"gameStart\",\n    value: function gameStart() {\n      var _this3 = this;\n\n      var dom = this.dom;\n      dom.addEventListener('click', function (e) {\n        var target = e.target;\n        var type = target.getAttribute('data-type');\n        console.log('type', type);\n\n        switch (type) {\n          case 'cell':\n            var _target$getAttribute$ = target.getAttribute('data-location').split('-').map(function (item) {\n              return Number(item);\n            }),\n                _target$getAttribute$2 = _slicedToArray(_target$getAttribute$, 2),\n                row = _target$getAttribute$2[0],\n                col = _target$getAttribute$2[1];\n\n            _this3.table.handleInputFocus(row, col);\n\n            break;\n\n          case 'btn':\n            var inputNum = target.getAttribute('data-value');\n\n            _this3.table.handleUserInput(inputNum);\n\n            break;\n\n          case 'opera':\n            //游戏设置\n            var id = target.getAttribute('data-id');\n            console.log('设置==', id);\n            break;\n\n          default:\n            console.log('点击无效区域');\n            break;\n        }\n      });\n    }\n  }, {\n    key: \"handleUserInterface\",\n    value: function handleUserInterface(id) {\n      var typeList = ['start', 'next', 'level', 'stop', 'reset', 'answer'];\n      var typeName = ['开始', '换一个', '难度', '停止', '重置', '答案'];\n\n      switch (id) {\n        case 'start':\n          this.startTime = new Date();\n          this.gameStart();\n          break;\n\n        case 'next':\n          break;\n\n        case 'level':\n          break;\n\n        case 'stop':\n          break;\n\n        case 'reset':\n          break;\n\n        case 'answer':\n          break;\n      }\n    }\n  }]);\n\n  return Sodoku;\n}();\n\nvar NumberPanel =\n/*#__PURE__*/\nfunction () {\n  function NumberPanel() {\n    _classCallCheck(this, NumberPanel);\n\n    var list = [];\n\n    for (var i = 1; i <= 9; i++) {\n      var btn = new NumberButton(i);\n      list.push(btn);\n    }\n\n    ;\n    list.push(new NumberButton(0)); //清除输入\n\n    this.buttons = list;\n  }\n\n  _createClass(NumberPanel, [{\n    key: \"init\",\n    value: function init(dom) {\n      var list = this.buttons;\n      var container = document.createElement('ul');\n      list.forEach(function (btn) {\n        var btnNode = document.createElement('li');\n        var num = btn.getNum();\n        btnNode.classList.add('btn');\n        btnNode.classList.add('base-cell');\n        btnNode.innerText = num === 0 ? '←' : num;\n        btnNode.setAttribute('data-value', num);\n        btnNode.setAttribute('data-type', 'btn');\n        container.appendChild(btnNode);\n      });\n      container.classList.add('number-btns');\n      dom.appendChild(container);\n    }\n  }]);\n\n  return NumberPanel;\n}();\n\nvar NumberButton =\n/*#__PURE__*/\nfunction () {\n  function NumberButton(num) {\n    _classCallCheck(this, NumberButton);\n\n    this.num = num;\n  }\n\n  _createClass(NumberButton, [{\n    key: \"getNum\",\n    value: function getNum() {\n      return this.num;\n    }\n  }]);\n\n  return NumberButton;\n}();\n\nvar UserInerfacePanel =\n/*#__PURE__*/\nfunction () {\n  function UserInerfacePanel() {\n    _classCallCheck(this, UserInerfacePanel);\n\n    //1-初试状态 2-游戏中 3-用户停止 4-游戏过关\n    this.status = 1;\n    this.dom = null;\n  }\n\n  _createClass(UserInerfacePanel, [{\n    key: \"init\",\n    value: function init(dom) {\n      dom.classList.add('user-interface');\n      this.dom = dom;\n      this.getPanelDom(dom);\n    }\n  }, {\n    key: \"changStatus\",\n    value: function changStatus(status) {\n      this.status = status;\n      this.getPanelDom(this.dom);\n    }\n  }, {\n    key: \"getStatus\",\n    value: function getStatus() {\n      return this.status;\n    }\n  }, {\n    key: \"getPanelDom\",\n    value: function getPanelDom(dom) {\n      var _this4 = this;\n\n      var statusBtns = {\n        1: '123',\n        2: '4',\n        3: '5236',\n        4: '1236'\n      };\n      var status = this.status;\n      dom.innerHTML = '';\n      statusBtns[status].split('').forEach(function (item) {\n        var btnNode = _this4.getBtnNode(item);\n\n        dom.appendChild(btnNode);\n      });\n    }\n  }, {\n    key: \"getBtnNode\",\n    value: function getBtnNode(btnId) {\n      var typeList = ['start', 'next', 'level', 'stop', 'reset', 'answer'];\n      var typeName = ['开始', '换一个', '难度', '停止', '重置', '答案'];\n      var node = document.createElement('a');\n      node.classList.add('user-btns');\n      node.classList.add(typeList[btnId - 1]);\n      node.innerText = typeName[btnId - 1];\n      node.setAttribute('data-type', 'opera');\n      node.setAttribute('data-id', typeList[btnId - 1]);\n      return node;\n    }\n  }]);\n\n  return UserInerfacePanel;\n}();\n\nwindow.onload = function () {\n  var appContainer = document.getElementById('app');\n  var game = new Sodoku(appContainer);\n  game.digBoard(1);\n  game.updateDom();\n  game.gameStart();\n  console.log(game);\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./index.js\n");

/***/ }),

/***/ "./style.css":
/*!*******************!*\
  !*** ./style.css ***!
  \*******************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// removed by extract-text-webpack-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zdHlsZS5jc3MuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zdHlsZS5jc3M/Y2MzMiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyByZW1vdmVkIGJ5IGV4dHJhY3QtdGV4dC13ZWJwYWNrLXBsdWdpbiJdLCJtYXBwaW5ncyI6IkFBQUEiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./style.css\n");

/***/ })

/******/ });